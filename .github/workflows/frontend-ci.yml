name: Frontend CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-ci.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-ci.yml'

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.cache-key.outputs.key }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'yarn'
        cache-dependency-path: frontend/yarn.lock

    - name: Generate cache key
      id: cache-key
      run: echo "key=${{ runner.os }}-node-${{ hashFiles('frontend/yarn.lock') }}" >> $GITHUB_OUTPUT

    - name: Cache node_modules
      uses: actions/cache@v3
      with:
        path: frontend/node_modules
        key: ${{ steps.cache-key.outputs.key }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install dependencies
      working-directory: ./frontend
      run: yarn install --frozen-lockfile
  lint:
    runs-on: ubuntu-latest
    needs: setup
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'yarn'
        cache-dependency-path: frontend/yarn.lock

    - name: Restore node_modules
      uses: actions/cache@v3
      with:
        path: frontend/node_modules
        key: ${{ needs.setup.outputs.cache-key }}

    - name: Run linter
      working-directory: ./frontend
      run: yarn lint:check

    - name: Check formatting
      working-directory: ./frontend
      run: yarn format:check

  type-check:
    runs-on: ubuntu-latest
    needs: setup
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'yarn'
        cache-dependency-path: frontend/yarn.lock

    - name: Restore node_modules
      uses: actions/cache@v3
      with:
        path: frontend/node_modules
        key: ${{ needs.setup.outputs.cache-key }}

    - name: Type check
      working-directory: ./frontend
      run: yarn run vue-tsc --noEmit

  test:
    runs-on: ubuntu-latest
    needs: setup
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'yarn'
        cache-dependency-path: frontend/yarn.lock

    - name: Restore node_modules
      uses: actions/cache@v3
      with:
        path: frontend/node_modules
        key: ${{ needs.setup.outputs.cache-key }}

    - name: Run tests
      working-directory: ./frontend
      run: |
        if yarn run test --version 2>/dev/null; then
          yarn run test
        else
          echo "No tests configured for frontend"
        fi

  build:
    runs-on: ubuntu-latest
    needs: [setup, lint, type-check, test]
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'yarn'
        cache-dependency-path: frontend/yarn.lock

    - name: Restore node_modules
      uses: actions/cache@v3
      with:
        path: frontend/node_modules
        key: ${{ needs.setup.outputs.cache-key }}

    - name: Build application
      working-directory: ./frontend
      run: yarn build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-dist
        path: frontend/dist/
        retention-days: 7